@using Microsoft.AspNet.Identity
@model OrdersViewModel

@{
    ViewBag.Title = "Orders History";
}

<section class="flat-row flat-iconbox">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="title-section">
                    <h2 class="title">
                        Orders History
                    </h2>
                </div>
            </div>
        </div>

        <div id="tableContiner">


            <div>
                <table id="OrdersTable" class="table table-striped">
                    <thead>
                        <tr>
                            <th class="font-weight-bold">Order ID</th>
                            <th class="font-weight-bold">Total Price</th>
                            <th class="font-weight-bold">Status</th>
                            <th class="font-weight-bold wrap-td">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Orders != null && Model.Orders.Count > 0)
                        {

                            foreach (var order in Model.Orders)
                            {
                                <tr>
                                    <td>@order.ID</td>
                                    <td>
                                        @order.TotalAmount
                                    </td>
                                    <td>@order.Status</td>
                                    <td class="wrap-td">
                                        <a class="detailBtn" data-id="@order.ID" href="@Url.Action("OrderItemDetail", "Order", new { ID = order.ID ,userId=User.Identity.GetUserId()})">Details</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td class="text-danger" colspan="4">No Order History Found.</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div>
                    @if (Model.Pager != null && Model.Pager.TotalPages > 1)
                    {

                        if (Model.Pager.CurrentPage > 1)
                        {
                            <a class="pageButtons" data-pageno="1" href="@Url.Action("Index", "Order", new { userID = Model.UserID, status = Model.Status, pageNo = 1 })">First</a>
                            <a class="pageButtons" data-pageno="@(Model.Pager.CurrentPage - 1)" href="@Url.Action("Index", "Order", new { userID = Model.UserID, status = Model.Status, pageNo = Model.Pager.CurrentPage - 1 })">Previous</a>
                        }

                        for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                        {
                            string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                            <a class="@activeClass pageButtons" data-pageno="@page" href="@Url.Action("Index", "Order", new { userID = Model.UserID, status = Model.Status, pageNo = page })">@page</a>
                        }

                        if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                        {
                            <a class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)" href="@Url.Action("Index", "Order", new { userID = Model.UserID, status = Model.Status, pageNo = Model.Pager.CurrentPage + 1 })">Next</a>
                            <a class="pageButtons" data-pageno="@Model.Pager.EndPage" href="@Url.Action("Index", "Order", new { userID = Model.UserID, status = Model.Status, pageNo = Model.Pager.EndPage })">Last</a>
                        }
                    }
                </div>
            </div>
        </div>

        <hr />
    </div>
</section>


<script>
    function focusAction(controlToFocus) {
        $('html, body').animate({
            scrollTop: $("#" + controlToFocus).offset().top - 100
        }, 1000);
    }
</script>